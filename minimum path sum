package com.company;

import java.util.*;


public class Main {
    public static int minpathsum(int arr[][]){
        int m = arr.length;
        int n =arr[0].length;
        int dp[][]=new int[m][n];
        for (int i= arr.length-1;i>=0;i--){
            for (int j=arr[0].length-1;j>=0;j--){
                if (i==dp.length-1&& j==dp[0].length-1){
                    dp[i][j]=arr[i][j];
                }
                else if (i==dp.length-1){
                    dp[i][j]=dp[i][j+1]+arr[i][j];
                }
                else if(j==dp[0].length-1){
                    dp[i][j]=dp[i+1][j]+arr[i][j];
                }
                else {
                    dp[i][j]=Math.min(dp[i+1][j],dp[i][j+1])+arr[i][j];
                }
            }
        }
        return dp[0][0];
    }
    public  static void main(String[]args){
        int arr[][]={{1,3,1},{1,5,1},{4,2,1}};
        System.out.print(minpathsum(arr));
    }
}
